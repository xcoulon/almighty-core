kind: Template
apiVersion: v1
metadata:
  name: core
objects:
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    labels:
      service: core
    name: core
  spec:
    replicas: 4
    selector:
      service: core
    strategy:
      resources:
        limits:
          memory: 1.5Gi
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          service: core
      spec:
        containers:
        - image: registry.devshift.net/fabric8-services/fabric8-wit:${IMAGE_TAG}
          env:
          - name: F8_POSTGRES_HOST
            valueFrom:
              secretKeyRef:
                name: core
                key: db.host
          - name: F8_POSTGRES_PORT
            valueFrom:
              secretKeyRef:
                name: core
                key: db.port
          - name: F8_POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: core
                key: db.user
          - name: F8_POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: core
                key: db.password
          - name: F8_KEYCLOAK_REALM
            valueFrom:
              secretKeyRef:
                name: core
                key: keycloak.realm
          - name: F8_TOKEN_PUBLICKEY
            valueFrom:
              secretKeyRef:
                name: core
                key: token.publickey
          - name: F8_KEYCLOAK_SECRET
            valueFrom:
              secretKeyRef:
                name: core
                key: keycloak.secret
          - name: F8_POSTGRES_SSLMODE
            valueFrom:
              configMapKeyRef:
                name: core
                key: postgres.sslmode
          - name: F8_POSTGRES_CONNECTION_MAXIDLE
            valueFrom:
              configMapKeyRef:
                name: core
                key: postgres.connection.maxidle
          - name: F8_POSTGRES_CONNECTION_MAXOPEN
            valueFrom:
              configMapKeyRef:
                name: core
                key: postgres.connection.maxopen
          - name: F8_AUTH_NOTAPPROVED_REDIRECT
            valueFrom:
              configMapKeyRef:
                name: core
                key: auth_notapproved_redirect
          - name: F8_TENANT_SERVICEURL
            valueFrom:
              secretKeyRef:
                name: core
                key: tenantsvc.url
          - name: F8_CHESTARTERURL
            valueFrom:
              configMapKeyRef:
                name: core
                key: chestarter.url
          - name: F8_AUTH_URL
            valueFrom:
              configMapKeyRef:
                name: core
                key: auth.serviceurl
          - name: F8_REDIRECT_VALID
            valueFrom:
              configMapKeyRef:
                name: core
                key: redirect.valid
          - name: F8_OPENSHIFT_TENANT_MASTERURL
            valueFrom:
              configMapKeyRef:
                name: core
                key: openshift.tenant.masterurl
          - name: F8_FEATURE_WORKITEM_REMOTE
            valueFrom:
              configMapKeyRef:
                name: core
                key: feature.workitem.remote
          - name: F8_NOTIFICATION_SERVICEURL
            valueFrom:
              configMapKeyRef:
                name: core
                key: notification.serviceurl
          imagePullPolicy: Always
          name: core
          ports:
          - containerPort: 8080
            protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/status
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/status
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
  status:
    details:
      causes:
      - type: ConfigChange
- kind: Service
  apiVersion: v1
  metadata:
    name: core
    labels:
      service: core
  spec:
    ports:
      - name: "8080"
        protocol: TCP
        port: 80
        targetPort: 8080
    selector:
      service: core
    type: ClusterIP
    sessionAffinity: null
- kind: Route
  apiVersion: v1
  metadata:
    name: core
  spec:
    host: ''
    to:
      kind: Service
      name: core
parameters:
- name: IMAGE_TAG
  value: latest
